//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibraryEntities : DbContext
    {
        public LibraryEntities()
            : base("name=LibraryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<BorrowBook> BorrowBooks { get; set; }
        public virtual DbSet<Login_new> Login_new { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Table_1> Table_1 { get; set; }
    
        public virtual int SP_add_books(string bookName, string author, string genre, string dateAdded, string bookQuantity)
        {
            var bookNameParameter = bookName != null ?
                new ObjectParameter("BookName", bookName) :
                new ObjectParameter("BookName", typeof(string));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var genreParameter = genre != null ?
                new ObjectParameter("Genre", genre) :
                new ObjectParameter("Genre", typeof(string));
    
            var dateAddedParameter = dateAdded != null ?
                new ObjectParameter("DateAdded", dateAdded) :
                new ObjectParameter("DateAdded", typeof(string));
    
            var bookQuantityParameter = bookQuantity != null ?
                new ObjectParameter("BookQuantity", bookQuantity) :
                new ObjectParameter("BookQuantity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_add_books", bookNameParameter, authorParameter, genreParameter, dateAddedParameter, bookQuantityParameter);
        }
    
        public virtual ObjectResult<ViewBooks_Result> ViewBooks(string bookName)
        {
            var bookNameParameter = bookName != null ?
                new ObjectParameter("BookName", bookName) :
                new ObjectParameter("BookName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewBooks_Result>("ViewBooks", bookNameParameter);
        }
    }
}
